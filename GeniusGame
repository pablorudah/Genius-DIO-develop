
Jogo Genius construído de forma mais completa
https://www.youtube.com/watch?v=iPI-exnefBo&list=PL28O_hEAqjAtOPTlRHkHrhfmct_USCGfI&index=2

http://getbem.com/

1 rem: equivalente a 16 pixels (tamanho padrão de uma fonte num documento html)


https://www.youtube.com/watch?v=3ezfs8petMo&list=PL28O_hEAqjAtOPTlRHkHrhfmct_USCGfI&index=3

https://www.youtube.com/watch?v=_7Bp9WJCvI4&list=PL28O_hEAqjAtOPTlRHkHrhfmct_USCGfI&index=3

---------------------------------------------------------------------------------------------------------------











---------------------------------------------------------------------------------------------------------------

O código abaixo foi feito seguindo o passo a passo dado dentro do bootcamp no site da DIO, relacionado ao arquivo script.js



let order = [];
let clickedOrder = [];
let score = 0;

// 0 - verde
// 1 - vermelho
// 2 - amarelo
// 3 - azul

const blue = document.querySelector('.blue');
const red = document.querySelector('.red');
const green = document.querySelector('.green');
const yellow = document.querySelector('.yellow');

//Cria ordem aleatória de cores
let shuffleOrder = () => {
    let colorOrder = Math.floor(Math.random() * 4 );
    order[order.length] = colorOrder;
    clickedOrder = [];

    for( let i in order ) {
        let elementColor = createColorElement(order[i]);
        lightColor(elementColor, Number(i) + 1);
    }
}

//acende a próxima cor
let lightColor = (element, number) => {
    number = number * 500;
    setTimeout( () => {
        element.classList.add('selected');
    }, number - 250);

    setTimeout( () => {
        element.classList.remove('selected');  
    });
}

//checa se os botões apertados são os mesmos que piscaram
let checkOrder = () => {
    for( let i in clickedOrder ) {
        if( clickedOrder[i] != order[i] ){
            gameOver();
            break;
        }
    }

    if( clickedOrder.length == order.length ){
        alert(`Pontuação: ${score}\n Você acertou! Iniciando próximo nível...`);
        nextLevel();
    }
}

//função para o clique do usuário nos botões de cores
let click = (color) => {
    clickedOrder[clickedOrder.length] = color;
    createColorElement(color).classList.add('selected');

    setTimeout(() => {
        createColorElement(color).classList.remove('selected');
        checkOrder();
    }, 250);    
}

//funcao que retorna a cor 
let createColorElement = (color) => {
    if( color == 0 ) {
        return green;
    } else if(color == 1){
        return red;
    }else if(color == 2){
        return yellow;
    }else if(color == 3){
        return blue;
    }
}

//funcão que carrega o próximo nível do jogo
let nextLevel = () => {
    score++;
    shuffleOrder();
} 

//funcão para gameOver (vai dar alert e recomeçar o jogo)
let gameOver = () => {
    alert(`Pontuação: ${score}! Você perdeu o jogo.\n Clique em OK para iniciar um novo jogo`);
    order = [];
    clickedOrder = [];
    playGame();
}

//funcão para iniciar o Game
let playGame = () => {
    alert(`Bem vindo ao Genius! Iniciando novo jogo...`);
    score = 0;

    nextLevel();
}

//eventos de clique para as cores
green.onclick = () => click(0);
red.onclick = () => click(1);
yellow.onclick = () => click(2);
blue.onclick = () => click(3);

//Roda o inicio jogo
playGame();
